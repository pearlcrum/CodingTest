#include<iostream>
#include<algorithm>
using namespace std;
int t;
int arr[2][100001];
int ans[2][100001];
int dp(int n)
{
	ans[0][0] = arr[0][0];
	ans[1][0] = arr[1][0];
	ans[0][1] = arr[1][0] + arr[0][1];
	ans[1][1] = arr[0][0] + arr[1][1];
	for (int i = 2; i < n; i++)
	{
		ans[0][i] = max(ans[1][i-2]+arr[0][i],ans[1][i-1]+arr[0][i]);
		ans[1][i] = max(ans[0][i - 2] + arr[1][i], ans[0][i - 1] + arr[1][i]);
	}
	return max(ans[0][n-1], ans[1][n-1]);
}
int main()
{
	ios::sync_with_stdio(false);
	cin.tie(0);
	cin >> t;
	for (int p = 0; p < t; p++)
	{
		int n;
		cin >> n;
		for (int i = 0; i < 2; i++)
		{
			for (int j = 0; j < n; j++)
			{
				cin >> arr[i][j];
			}
		}
		int res=dp(n);
		cout << res << "\n";
	}
}

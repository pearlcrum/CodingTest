#include<iostream>
#include<algorithm>
#include<cstring>
#include<queue>
using namespace std;
int n, k;
bool arr[100005];
int minO = 100001;
queue<pair<int, int>> q;
void bfs(int n)
{
	
	q.push({ n,0 });
	while (!q.empty())
	{
		int x = q.front().first;
		arr[x] = 1;
		int cnt = q.front().second;
		q.pop();
		if (x == k)
		{
			minO = cnt;
			break;
		}
		else if (x < k && x<100001 && x>=0)
		{
			if (x > 0)
			{
				if (!arr[x - 1])
				{
					q.push({ x - 1,cnt + 1 });
				}
			}
			if (!arr[x + 1])
			{
				q.push({ x + 1,cnt + 1 });
			}
			if (2 * x < 100001)
			{
				if (!arr[2 * x])
				{
					q.push({ 2 * x,cnt + 1 });
				}
			}
		}
		else if( x>k && x<100001 && x>0)
		{
			if (!arr[x - 1])
			{
				q.push({ x - 1,cnt + 1 });
			}
		}
	}
	cout << minO;
}
int main()
{
	cin >> n >> k;
	bfs(n);
}

#include <string>
#include <iostream>
#include <cstring>
#include <vector>
#include <stack>
#include <algorithm>
#include <unordered_set>
#include <math.h>
using namespace std;

int n;
int arr[501][501];
int dp[501][501];
int vx[4] = { 1,0,0,-1 };
int vy[4] = { 0,1,-1,0 };
int ans = 0;
int dfs(int a, int b)
{
	if (dp[a][b])
		return dp[a][b];
	dp[a][b] = 1;
	for (int i = 0; i < 4; i++)
	{
		int nextX = a + vx[i];
		int nextY = b + vy[i];
		if (nextX < 0 || nextY < 0 || nextX >= n || nextY >= n)
			continue;
		if (arr[a][b] < arr[nextX][nextY])
		{
			dp[a][b] = max(dp[a][b], dfs(nextX, nextY) + 1);
		}
	}
	return dp[a][b];
	
}
int main()
{
	ios::sync_with_stdio(false);
	cin.tie(0);
	cin >> n;
	for (int i = 0; i < n; i++)
		for (int j = 0; j < n; j++)
			cin >> arr[i][j];
	
	for (int i = 0; i < n; i++)
	{
		for (int j = 0; j < n; j++)
		{
			ans=max(dfs(i, j),ans);
		}
	}
	cout << ans;
}

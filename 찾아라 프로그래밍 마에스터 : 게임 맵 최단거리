#include<vector>
#include<queue>
using namespace std;
bool arr[101][101];
int vx[4]={-1,0,1,0};
int vy[4]={0,1,0,-1};

int solution(vector<vector<int>> maps)
{
    int answer = -1;
    int n=maps.size();
    int m=maps[0].size();
    queue<pair<int,pair<int,int>>> q;
    q.push({1,{1,1}});
    arr[1][1]=true;
    while(!q.empty())
    {
        int tx=q.front().first;
        int ty=q.front().second.first;
        int count=q.front().second.second;
        q.pop();
        if(tx==n && ty==m)
        {
            answer=count;
            break;
        }
        for(int i=0; i<4;i++)
        {
            int ux=tx+vx[i];
            int uy=ty+vy[i];
            if(arr[ux][uy]==1)
                continue;
            if(ux>=1 && ux<=n && uy>=1 && uy<=m)
            {
                if(arr[ux][uy]==0&& maps[ux-1][uy-1]==1)
                {
                    arr[ux][uy]=true;
                    q.push({ux,{uy,count+1}});
                }
            }
        }
    }
    
    
    return answer;
}

#include <stdio.h>
#include <iostream>
#include<math.h>
#include<algorithm>
#include<vector>
#include <string>
#pragma warning(disable:4996)
using namespace std;

class location
{
public:
	int x;
	int y;
	location(int x, int y)
	{
		this->x = x;
		this->y = y;
	}
	void printlocation()
	{
		cout << this->x <<" "<< this->y << "\n";
	}
};

void showAll(vector<location> a);
bool compare(location a, location b);
void insertionsortAll(vector<location> &a);


int main()
{
	ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
	int c;
	cin >> c;
	vector <location> a;
	int x, y;
	while (c > 0)
	{
		cin >> x;
		cin >> y;
		location b(x, y);
		a.push_back(b);
		c--;
	}
	sort(a.begin(), a.end(), compare);
	//insertionsortAll(a);
	//mergesortAll(a, 0, a.size());
	showAll(a);
}

bool compare(location a, location b)
{
	if (a.x == b.x)
	{
		return a.y < b.y;
	}
	else
	{
		return a.x < b.x;
	}
}

void insertionsortAll(vector<location> &a) //insertion sort를 사용한 경우 시간 초과가 일어난다.
{
	location key(0,0);
	int i, j;
	for (i = 1; i < a.size(); i++)
	{
		key = a[i];
		for (j = i - 1; j >= 0; j--)
		{
			if (a[j].x > key.x)
			{
				a[j + 1] = a[j];
			}
			else if (a[j].x == key.x)
			{
				if (a[j].y > key.y)
				{
					a[j + 1] = a[j];
				}
			}
			else
			{
				break;
			}
		}
		a[j+1] = key;
	}

}



void showAll(vector<location> a)
{
	for (int i = 0; i < a.size(); i++)
	{
		a[i].printlocation();
	}
}

#include <iostream>
#include <utility>
#include <queue>

#define INF 100001

using namespace std;
int n, k;

queue<pair<int, int>> pq;
bool check[INF];
int min0=INF;
void bfs()
{
	pq.push({ n,0 });
	while (!pq.empty())
	{
		int x = pq.front().first;
		int cnt = pq.front().second;
		check[x] = 1;
		pq.pop();
		if (x == k)
		{
			min0 = cnt;
			while (!pq.empty())
			{
				int u = pq.front().first;
				int p = pq.front().second;
				if (u == k)
				{
					min0 = min(min0, p);
				}
				pq.pop();
			}
			break;
		}
		else if (x < k && x >= 0 && x < INF)
		{
			if (x * 2 < INF && !check[2*x])
			{
				pq.push({ 2 * x,cnt });
			}
			if (!check[x + 1] && x + 1 < INF)
			{
				pq.push({ x + 1,cnt + 1 });
			}
			if (!check[x - 1] && x - 1 >= 0)
			{
				pq.push({ x - 1,cnt + 1 });
			}
		}
		else if (x > k && x < INF)
		{
			if (!check[x - 1] && x - 1 >= 0)
			{
				pq.push({ x - 1,cnt + 1 });
			}
		}
	}

	cout << min0;
}


int main()
{
	ios::sync_with_stdio(false);
	cin.tie(0);
	cin >> n >> k;
	bfs();
}

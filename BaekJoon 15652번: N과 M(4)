//DFS와 백트래킹을 이용해서 풀었습니다.
#include <stdio.h>
#include <iostream>
#include<math.h>
#include<algorithm>
#include<vector>
#include <string>
#include<map>

#pragma warning(disable:4996)
using namespace std;

int n, m;
//vector<bool> check(8, 0);
vector<int>ans;
vector<int> arr;
void print()
{
    for (int i = 0; i < ans.size(); i++)
    {
        cout << ans[i] << " ";
    }
    cout << "\n";
}

void dfs(int num,int cnt)
{
    if (cnt == m)
    {
    
        print();
        return;
    }
    for (int i = num; i < n;i++)
    {   
        ans.push_back(arr[i]);
        dfs(i,cnt + 1);
        ans.pop_back();
    }
}

int main() {
    cin >> n >> m;
    for (int i = 1; i <= n; i++)
    {
        arr.push_back(i);
    }
    dfs(0,0);
}

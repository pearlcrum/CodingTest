#include <string>
#include <vector>
#include <queue>
#include <string>
#include <cstring>
using namespace std;

priority_queue<int> pq1;
priority_queue<int,vector<int>,greater<int>> pq2;

vector<int> solution(vector<string> operations) {
    vector<int> answer;
    for(int i=0; i<operations.size();i++)
    {
        string s=operations[i].substr(2);
        int num=stoi(s);
        if(operations[i][0]=='I')
        {
            pq1.push(num);
            pq2.push(num);
        }
        else//delete
        {
            if(num==-1)//최소 제외
            {
                if(!pq2.empty())
                    pq2.pop();
                vector<int> temp;
                if(!pq1.empty())
                {
                    for(int j=0; j<pq1.size()-1;j++)
                    {
                        int now=pq1.top();
                        pq1.pop();
                        temp.push_back(now);
                    }
                    pq1.pop();
                    for(int j=0; j<temp.size();j++)
                    {
                        pq1.push(temp[j]);
                    }
                }
            }
            else
            {
                if(!pq1.empty())
                    pq1.pop();
                vector<int> temp;
                if(!pq2.empty())
                {
                    for(int j=0; j<pq2.size()-1;j++)
                    {
                        int now=pq2.top();
                        pq2.pop();
                        temp.push_back(now);
                    }
                    pq2.pop();
                    for(int j=0; j<temp.size();j++)
                    {
                        pq2.push(temp[j]);
                    }
                }
            }
        }
    }
    if(pq1.empty() || pq2.empty())
    {
        answer.push_back(0);
        answer.push_back(0);
    }
    else
    {
        answer.push_back(pq1.top());
        answer.push_back(pq2.top());
    }
    return answer;
}

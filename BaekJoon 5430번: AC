#include <string>
#include <iostream>
#include <algorithm>
#include <stack>
#include <queue>
#include <vector>
#include <math.h>
#include <map>
#define INF 987654321
using namespace std;

int t;
int main()
{
	cin.tie(0);
	ios::sync_with_stdio(false);
	cin >> t;
	for (int p = 0; p < t; p++)
	{
		deque<int> dq;
		string s;// 어떤 functoin
		cin >> s;
		int arrSize; //사이즈
		cin >> arrSize;
		string sArr;
		cin >> sArr; //배열
		string temp;//2자리 이상의 숫자를 위해
		for (int i = 0; i < sArr.size(); i++)
		{
			if (sArr[i] == '[')
				continue;
			else if (sArr[i] >= '0' && sArr[i] <= '9')
				temp += sArr[i];
			else if (sArr[i] == ',' || sArr[i] == ']')
			{
				if (!temp.empty())
				{
					dq.push_back(stoi(temp));
					temp.clear();
				}
			}
		}



		bool check = true;//정방향
		bool check2 = false;
		for (int i = 0; i < s.size(); i++)
		{
			if (s[i] == 'R')
			{
				if (check == true)
					check = false;//역방향
				else
					check = true;
			}
			else if (s[i] == 'D')
			{
				if (check == true)
				{
					if (!dq.empty())
						dq.pop_front();
					else
					{
						cout << "error" << "\n";
						check2 = true;
						break;
					}
				}
				else if (check == false)
				{
					if (!dq.empty())
						dq.pop_back();
					else
					{
						cout << "error" << "\n";
						check2 = true;
						break;
					}
						
				}
			}
		}
		if (check2 == true)
			continue;
		if (check == true)
		{
			cout << "[";
			int b = dq.size();
			for (int i = 0; i < b; i++)
			{
				int temp = dq.front();
				dq.pop_front();
				cout << temp;
				if (!dq.empty())
					cout <<",";
			}
			cout << "]" << "\n";
		}
		else if (check == false)
		{
			cout << "[";
			int b = dq.size();
			for (int i = b-1; i >= 0; i--)
			{
				int temp = dq.back();
				dq.pop_back();
				cout << temp;
				if (!dq.empty())
					cout << ",";
			}
			cout << "]" << "\n";
		}
		
	}
}

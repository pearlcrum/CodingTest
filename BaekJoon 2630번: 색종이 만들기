#include <stdio.h>
#include <iostream>
#include <sstream>
#include<math.h>
#include<algorithm>
#include<vector>
#include<cstring>
#include <string>
#include<map>
#include<stack>
#include<queue>
#include<deque>
#pragma warning(disable:4996)
using namespace std;

/*
- endl 대신 '\n' 사용하기
- cin.tie(0) 사용
- 테스트 케이스 있는 문제일 시 전역변수 초기화 신경쓰기
- (A + B + C) % D = ((A + B) % D + C) % D
- 문자열 출력 문제는 정답 문자열 복사해서 코드에 넣기
- 괄호 사용 유의하기
- 문자열은 함수로 넘길 때 const & 잘 사용하기

- 최악의 경우 int 값 초과하는지, 배열 인덱스 초과하는지 확인
- n 범위 확인 (0인 경우), 양수음수 정수소수 확인, 불가케이스 -1 출력 등 확인
- 큰 배열 선언 시 전역선언, 테케 많을 시 초기화, 배열 용량 max N + 5
*/
int n;
int arr[128][128];
int blue, white;

void solve(int x, int y, int size)
{
	//x,y는 현재 탐색하고자 하는 사분면의 가장 위쪽 좌표
	//size는 사분면의 한 변의 길이
	int check = arr[x][y]; //현재 있는 색깔이 무엇인지 알린다.
	for (int i = x; i < x + size; i++)
	{
		for (int j = y; j < y + size; j++)
		{
			if (check == 0 && arr[i][j] == 1)
			{
				check = 2;
			}
			else if (check == 1 && arr[i][j] == 0)
			{
				check = 2;
			}
			if (check == 2)
			{
				//왼쪽 사분면 탐색
				solve(x, y, size / 2);
				solve(x, y + size / 2, size / 2);
				solve(x + size / 2, y, size / 2);
				solve(x + size / 2, y + size / 2, size / 2);
				return;
			}
		}
	}
	if (check == 0)
		white++;
	else
		blue++;
}

int main()
{
	
	cin.tie(0);

	cin >> n;
	for (int i = 0; i < n; i++)
	{
		for (int j = 0; j < n; j++)
		{
			cin >> arr[i][j];
		}
	}// 값을 다 넣었다.
	solve(0, 0, n);
	cout << white << "\n";
	cout << blue << "\n";
}


#include <iostream>
#include <string>
#include <algorithm>
#include <vector>
#include <stack>
#include <cstring>
#include <queue>
using namespace std;

int n, m;
int arr[1001][1001];
bool visit[1001];
int cnt = 0;
void dfs(int i)
{
	stack<int> st;
	st.push(i);
	visit[i] = true;

	while (!st.empty())
	{
		int now = st.top();
		st.pop();
		
		for (int j = 1; j <= n; j++)
		{
			if (visit[j])
				continue;
			if (!visit[j] && arr[now][j] == 1)
			{
				visit[j] = true;
				st.push(j);
			}
		}
	}
}
int main()
{
	ios::sync_with_stdio(false);
	cin.tie(0);
	cin >> n >> m;
	for (int i = 0; i < m; i++)
	{
		int a, b;
		cin >> a >> b;
		arr[a][b] = 1;
		arr[b][a] = 1;
	}
	for (int i = 1; i <= n; i++)
	{
		if (visit[i])
			continue;
		else
		{
			cnt++;
			dfs(i);
		}
	}
	cout << cnt;
}
	

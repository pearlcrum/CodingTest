#include <string>
#include <iostream>
#include <cstring>
#include <vector>
#include <stack>
#include <algorithm>
using namespace std;

int n;
int arr[301];
int dp[301][2]; //현재위치 누른 여부 연속
int main()
{
	cin.tie(0);
	ios::sync_with_stdio(false);
	cin >> n;
	for (int i = 1; i <= n; i++)
		cin >> arr[i];

	dp[1][0] = arr[1];// 
	dp[1][1] = 0; // 두번 넣은겨
	dp[2][0] = arr[2];
	dp[2][1] = arr[1]+arr[2];

	for (int i = 3; i <= n; i++)
	{
		dp[i][0] = max(dp[i-2][0],dp[i-2][1])+arr[i];
		dp[i][1] = dp[i - 1][0] + arr[i];
	}
	cout << max(dp[n][0], dp[n][1]);
}
=====================================================


#include <iostream>
#include <vector>
#include <algorithm>
#include <stdio.h>
#include <cstring>
using namespace std;

int n;
vector<int> arr;
int ans[301][2];
void dp()
{
	ans[1][0] = arr[1];
	ans[1][1] = 0;
	ans[2][0] = arr[2];
	ans[2][1] = arr[1] + arr[2];
	for (int i = 3; i <= n; i++)
	{
		ans[i][0] = max(ans[i - 2][0], ans[i - 2][1]) + arr[i];
		ans[i][1] = ans[i - 1][0] + arr[i];
	}
	cout << max(ans[n][0], ans[n][1]);
}
int main()
{
	ios::sync_with_stdio(false);
	cin.tie(0);
	cin >> n;
	arr.push_back(0);
	for (int i = 0; i < n; i++)
	{
		int a;
		cin >> a;
		arr.push_back(a);
	}
	dp();
}

#include <string>
#include <iostream>
#include <cstring>
#include <vector>
#include <queue>
#include <algorithm>
#include <map>
using namespace std;

int n;
vector<long long> vec;
vector<long long> answer;
int main()
{
    cin.tie(0);
    ios::sync_with_stdio(false);
    cin >> n;
    for (int i = 0; i < n; i++)
    {
        int a; cin >> a;
        vec.push_back(a);
    }
    sort(vec.begin(), vec.end());

    long long minAns = 123456789123456789;
    for (int i = 0; i < vec.size() - 1; i++)
    {
        int start = i + 1;
        int end = vec.size() - 1;
        while (start < end)
        {
            long long sum = vec[i] + vec[start] + vec[end];//세 개의 합
            if (sum == 0)
            {
                answer.clear();
                answer.push_back(vec[i]); answer.push_back(vec[start]); answer.push_back(vec[end]);
                sort(answer.begin(), answer.end());
                for (int i = 0; i < answer.size(); i++)
                {
                    cout << answer[i] << " ";
                }
                return 0;
            }
            else if (sum > 0)
            {
                if (minAns > abs(sum))
                {
                    minAns = abs(sum);
                    answer.clear();
                    answer.push_back(vec[i]); answer.push_back(vec[start]); answer.push_back(vec[end]);
                }
                end--;
            }
            else
            {
                if (minAns > abs(sum))
                {
                    minAns = abs(sum);
                    answer.clear();
                    answer.push_back(vec[i]); answer.push_back(vec[start]); answer.push_back(vec[end]);
                }
                start++;
            }
        }
    }
    sort(answer.begin(), answer.end());
    for (int i = 0; i < answer.size(); i++)
    {
        cout << answer[i] << " ";
    }
}

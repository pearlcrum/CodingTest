/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
#include<stack>
#include<queue>
class Solution {
public:
    TreeNode* invertTree(TreeNode* root) {
       
        if(root==nullptr)
            return 0;
        queue<TreeNode*> q;
        q.push(root);
        while(!q.empty())
        {
            TreeNode *now= q.front();
            q.pop();
            if(now->left!=nullptr || now->right!=nullptr)
            {
                TreeNode* tmp= now->left;
                now->left= now->right;
                now->right = tmp;
                if(now->left!=nullptr)
                    q.push(now->left);
                if(now->right!=nullptr)
                    q.push(now->right);
            }
        }
        return root;
    }
};

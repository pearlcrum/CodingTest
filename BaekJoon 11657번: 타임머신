#include <iostream>
#include <utility>
#include <cstring>
#include <vector>
#define MAX 501
#define INF 2100000000
using namespace std;

int n, m;
vector<pair<int, int>> arr[MAX];

long long dist[MAX];
void bellman()
{
	for (int i = 1; i <= n; i++)
	{
		dist[i] = INF;
	}
	dist[1] = 0;
	for (int k = 1; k <= n - 1; k++) //n-1번 돌리며 값 갱신
	{
		for (int i = 1; i <= n; i++)
		{
			for (int j = 0; j < arr[i].size(); j++)
			{
				int from = i;
				int to = arr[i][j].first;
				int w = arr[i][j].second;
				if (dist[from] == INF)
					continue;
				if (dist[to] > dist[from] + w)
					dist[to] = dist[from] + w;
			}
		}
	}
	for (int i = 1; i <= n; i++)
	{
		for (int j = 0; j < arr[i].size(); j++)
		{
			int from = i;
			int to = arr[i][j].first;
			int w = arr[i][j].second;
			if (dist[from] == INF)
				continue;
			if (dist[to] > dist[from] + w) //n-1번째 돌리고도 값이 바뀌면 음의 cycle 있는 경우다.
			{
				cout << -1<<"\n";
				return;
			}
		}
	}
	for (int i = 2; i <= n; i++)
	{
		if (dist[i] == INF)
		{
			cout << "-1" << "\n";
		}
		else
		{
			cout << dist[i] << "\n";
		}
	}
}	
int main()
{
	cin.tie(0);
	cin >> n >> m;
	for (int i = 0; i < m; i++)
	{
		int from, to, w;
		cin >> from >> to >> w;
		arr[from].push_back({ to,w });

	}
	bellman();

}

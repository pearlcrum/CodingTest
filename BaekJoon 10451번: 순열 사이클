#include <iostream>
#include <string>
#include <algorithm>
#include <vector>
#include <stack>
#include <cstring>
#include <queue>
using namespace std;

int t;
int n;
int arr[1001];
int arr2[1001];
bool visited[1001];
int dfs()
{
	stack<pair<int,int>> st;
	visited[1] = true;
	int cnt = 0;
	st.push({arr[1],arr2[1] });
	while (!st.empty())
	{
		int now = st.top().first;
		int next = st.top().second;
		st.pop();
		if (visited[next])
		{
			cnt++;
			for (int i = 1; i <= n; i++)
			{
				if (!visited[i])
				{
					visited[i] = true;
					st.push({ arr[i],arr2[i] });
					break;
				}
			}
		}
		else
		{
			visited[next] = true;
			st.push({ arr[next],arr2[next] });
		}
	}
	return cnt;
}
int main()
{
	ios::sync_with_stdio(false);
	cin.tie(0);
	cin >> t;
	for (int p = 0; p < t; p++)
	{
		cin >> n;
		for (int i = 1; i <= n; i++)
		{
			visited[i] = false;
			int a;
			arr[i] = i;
			cin >> a;
			arr2[i] = a;
		}
		int c;
		c=dfs();
		cout << c<<"\n";
	}
}
	

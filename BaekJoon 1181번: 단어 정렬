#include <string>
#include <iostream>
#include <cstring>
#include <vector>
#include <queue>
#include <algorithm>
#include <map>
using namespace std;
int n;


vector<string> vec;
bool compare(string s1, string s2)
{
    if (s1.size() == s2.size())
        return s1< s2;
    else
        return s1.size() < s2.size();
}
int main()
{
    cin.tie(0);
    ios::sync_with_stdio(false);
    cin >> n;
    for (int i = 0; i < n; i++)
    {
        string s;
        cin >> s;
        if(find(vec.begin(),vec.end(),s)==vec.end())
            vec.push_back(s);
    }

    sort(vec.begin(), vec.end(), compare);
    for (int i = 0; i < vec.size(); i++)
    {
        cout << vec[i] << "\n";
    }
}


=============================
#include <stdio.h>
#include <iostream>
#include<math.h>
#include<algorithm>
#include<vector>
#include <string>
#include<map>
#pragma warning(disable:4996)
using namespace std;


void showAll(vector<pair<string,int>> a);
bool compare(pair<string,int> a, pair<string, int> b);
//bool check(string s, vector<string> a);

int main()
{
	ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
	int c;
	cin >> c;
	string s;
	int num;
	map<string, int> strings;
	while (c>0)
	{
		cin >> s;
		num = s.size();
		strings.insert(pair<string, int>(s, num));
		c--;
	}
	vector<pair<string,int>>vec(strings.begin(), strings.end()); //정렬을 위해 vector에 담닌다.
	sort(vec.begin(), vec.end(), compare);
	showAll(vec);
	//vector <string> arr;
	//string s;
	//while (c > 0)
	//{
	//	cin >> s;
	//	if (arr.empty())
	//	{
	//		arr.push_back(s);
	//	}
	//	else 
	//	{
	//		if((check(s, arr)))
	//		arr.push_back(s);
	//	}
	//	c--;
	//}
	//sort(arr.begin(), arr.end(), compare);
	//showAll(arr);
}
void showAll(vector<pair<string, int>> a)
{
	for (int i = 0; i < a.size(); i++)
	{
		cout << a[i].first << "\n";
	}
}

bool compare(pair<string, int> a, pair<string, int> b)
{
	if (a.second == b.second)
	{
		return a.first < b.first;
	}
	else
	{
		return a.second < b.second;
	}
}




//bool check(string s, vector<string> a)
//{
//	for (int i = 0; i < a.size(); i++)
//	{
//		if (s == a[i])
//		{
//			return false;
//		}
//	}
//	return true;
//}
//


from my_ds import *
class TreeNode:
    def __init__(self, data, left=None, right=None):
        self.data = data
        self.left = left
        self.right = right
def reverse(root):
    q=CircledQueue()
    q.enqueue(root)
    while not q.is_empty():
        now=q.dequeue()
        if(now.left!=None or now.right!=None):
            temp=now.left
            now.left=now.right
            now.right=temp
            if now.left !=None:
                q.enqueue(now.left)
            if now.right!=None:
                q.enqueue(now.right)
def inorder(root):
    if root==None :
        return
    inorder(root.left)
    print(root.data,end='')
    inorder(root.right)
root = TreeNode(2, 
               TreeNode(3,
                       TreeNode(5,
                               TreeNode(7)
                               ),
                       TreeNode(6)
                       ),
                TreeNode(4,
                        None,
                        TreeNode(7)
                        )
               )
reverse(root)

#include <iostream>
#include <cstring>
#include <algorithm>
#include <queue>
using namespace std;

int n, m;
int input[101][101];
bool check[101][101];
int vx[4] = { 1,0,0,-1 };
int vy[4] = { 0,1,-1,0 };
pair<int, int> res;
queue<pair<pair<int,int>,int>> q;

int bfs(int x, int y)
{
	int cnt = 1;
	q.push( {{ x,y },1});
	check[x][y] = 1;
	
	while (!q.empty())
	{
		x = q.front().first.first;
		y = q.front().first.second;
		cnt = q.front().second;
		q.pop();
		if (x == n && y == m)
		{
			return cnt;
		}
		for (int i = 0; i < 4; i++)
		{
			int va = x + vx[i];
			int vb = y + vy[i];
			if (va<1 || va>n || vb<1 || vb>m)
			{
				continue;
			}
			if (input[va][vb] == 1&& !check[va][vb])
			{
				check[va][vb] = 1;
				q.push({ {va,vb },cnt + 1 });
			}
		}
	}
}


int main()
{
	cin.tie(0);
	cin >> n>> m;
	for (int i = 1; i <= n; i++)
	{
		string s;
		cin >> s;
		for (int j = 0; j < s.length(); j++)
		{
			input[i][j+1] = s[j] - '0';
		}
	}
	cout << bfs(1, 1);
}
